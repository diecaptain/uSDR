\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{patridge:SDR}
\citation{mitola2000sdr}
\citation{SCA}
\citation{vocallo}
\citation{soda}
\citation{kuar}
\citation{warp-platform}
\citation{usrp:e100}
\citation{usrp:n200}
\citation{sora}
\citation{sora}
\citation{kuar}
\citation{soda}
\citation{soda}
\citation{warp-platform}
\citation{usrp:n200}
\citation{usrp:e100}
\citation{soda}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{\thepage }{section.1}}
\newlabel{sec:intro}{{1}{\thepage }{Introduction}{section.1}{}}
\citation{warp-platform}
\citation{soda}
\citation{kuar}
\citation{sora}
\citation{schmid-latency}
\citation{cmu-mac-sdr}
\citation{soda}
\citation{pentium-m}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces A comparison of SDR platforms. The range in power comes from boards whose power usage varies depending on the presence and type of daughter card installed in the system. Where possible a measured idle / sleep power is also shown. For platforms that only list area we make reasonable assumptions on height. $\mu $SDR\xspace  is 10\% the cost of the next most expensive SDR platform, yet provides parable speeds in the smallest non-IC package. It uses less power than any realized hardware and nearly ties the previous best theoretical hardware.\relax }}{\thepage }{table.caption.4}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{tab:comparison}{{1}{\thepage }{A comparison of SDR platforms. The range in power comes from boards whose power usage varies depending on the presence and type of daughter card installed in the system. Where possible a measured idle / sleep power is also shown. For platforms that only list area we make reasonable assumptions on height. \sdr is 10\% the cost of the next most expensive SDR platform, yet provides parable speeds in the smallest non-IC package. It uses less power than any realized hardware and nearly ties the previous best theoretical hardware.\relax }{table.caption.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Related Work}{\thepage }{section.2}}
\newlabel{sec:related}{{2}{\thepage }{Related Work}{section.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Throughput and Latency}{\thepage }{subsection.2.1}}
\newlabel{sec:related-throughput}{{2.1}{\thepage }{Throughput and Latency}{subsection.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Power}{\thepage }{subsection.2.2}}
\newlabel{sec:related-power}{{2.2}{\thepage }{Power}{subsection.2.2}{}}
\citation{zynq}
\citation{alteraSoC}
\citation{igloo}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Portability}{\thepage }{subsection.2.3}}
\newlabel{sec:related-portability}{{2.3}{\thepage }{Portability}{subsection.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Price}{\thepage }{subsection.2.4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Architecture}{\thepage }{section.3}}
\newlabel{sec:arch}{{3}{\thepage }{Architecture}{section.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces $\mu $SDR\xspace  system architecture. The FPGA Fabric hosts the transmit, receive, and radio control and is directly connected to the AMBA High-performance Bus (AHB), together with the memory, analog compute engine (ACE) and the ARM Cortex-M3 core. This rapid interface allows direct memory-mapped access from the core to the SDR blocks. \relax }}{\thepage }{figure.caption.5}}
\newlabel{fig:system_arch}{{1}{\thepage }{\sdr system architecture. The FPGA Fabric hosts the transmit, receive, and radio control and is directly connected to the AMBA High-performance Bus (AHB), together with the memory, analog compute engine (ACE) and the ARM Cortex-M3 core. This rapid interface allows direct memory-mapped access from the core to the SDR blocks. \relax }{figure.caption.5}{}}
\citation{igloo}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Picture of the $\mu $SDR\xspace  platform. It measures 13\nobreakspace  {}$\times $\nobreakspace  {}7\nobreakspace  {}cm and runs for 7.5\nobreakspace  {}hours without duty cycling from 4 AA batteries, allowing for the first time true mobile SDR experiments. Shown for scaling is the TMote Sky. The current $\mu $SDR\xspace  is approximately four times the size of the Sky. Removing extraneous inputs (Ethernet, etc) and debugging headers, $\mu $SDR\xspace  is approximately twice as large as the Sky.\relax }}{\thepage }{figure.caption.6}}
\newlabel{fig:usdr}{{2}{\thepage }{Picture of the \sdr platform. It measures 13~$\times $~7~cm and runs for 7.5~hours without duty cycling from 4 AA batteries, allowing for the first time true mobile SDR experiments. Shown for scaling is the TMote Sky. The current \sdr is approximately four times the size of the Sky. Removing extraneous inputs (Ethernet, etc) and debugging headers, \sdr is approximately twice as large as the Sky.\relax }{figure.caption.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Cost Breakdown}{\thepage }{subsection.3.1}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Cost breakdown of the $\mu $SDR\xspace  platform.\relax }}{\thepage }{table.caption.7}}
\newlabel{tab:cost}{{2}{\thepage }{Cost breakdown of the \sdr platform.\relax }{table.caption.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Evaluation}{\thepage }{section.4}}
\newlabel{sec:eval}{{4}{\thepage }{Evaluation}{section.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Static current at each supply rail for the SmartFusion and In contrast, $\mu $SDR\xspace  has no current spike on bootup and an average current consumption of under 100\nobreakspace  {}mA. To measure time to first useful instruction, we wrote a simple program that simply toggles an IO line, indicating the processor is ready to start executing. We measured the time from power application until the IO asserts. The $\mu $SDR\xspace  requires 259\nobreakspace  {}ms to boot the system, consuming only 0.101\nobreakspace  {}J. Even the latency of $\mu $SDR\xspace  is not ideal for a rapid duty cycled system, which would ideally be in the {\em  microsecond} range as opposed to {\em  milliseconds}. $\mu $SDR\xspace  is remains significantly better than the USRP 2's {\em  seconds} to boot: $7.6\times $ faster in terms of latency and $94.7\times $ lower in terms of energy consumption. platforms.\relax }}{\thepage }{table.caption.8}}
\newlabel{tab:fpga_static_current}{{3}{\thepage }{Static current at each supply rail for the SmartFusion and In contrast, \sdr has no current spike on bootup and an average current consumption of under 100~mA. To measure time to first useful instruction, we wrote a simple program that simply toggles an IO line, indicating the processor is ready to start executing. We measured the time from power application until the IO asserts. The \sdr requires 259~ms to boot the system, consuming only 0.101~J. Even the latency of \sdr is not ideal for a rapid duty cycled system, which would ideally be in the {\em microsecond} range as opposed to {\em milliseconds}. \sdr is remains significantly better than the USRP 2's {\em seconds} to boot: $7.6\times $ faster in terms of latency and $94.7\times $ lower in terms of energy consumption. platforms.\relax }{table.caption.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Platform Micro-Benchmarks}{\thepage }{subsection.4.1}}
\newlabel{fig:usrp_coldboot}{{3(a)}{\thepage }{Subfigure 3(a)}{subfigure.3.1}{}}
\newlabel{sub@fig:usrp_coldboot}{{(a)}{\thepage }{Subfigure 3(a)\relax }{subfigure.3.1}{}}
\newlabel{fig:usdr_coldboot}{{3(b)}{\thepage }{Subfigure 3(b)}{subfigure.3.2}{}}
\newlabel{sub@fig:usdr_coldboot}{{(b)}{\thepage }{Subfigure 3(b)\relax }{subfigure.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces USRP2 and $\mu $SDR\xspace  cold boot comparison. Both systems power on at {\em  0\nobreakspace  {}s}. As expected, the USRP2 \ref  {sub@fig:usrp_coldboot} has a current spike of 1.8\nobreakspace  {}A, and exhibits an average current draw of 700\nobreakspace  {}mA at 6\nobreakspace  {}V. It takes 1.96\nobreakspace  {}s to load the firmware from an external SD card, resulting in 9.56\nobreakspace  {}Joules of energy consumption during cold boot. In contrast, the flash-based $\mu $SDR\xspace  doesn't have an in-rush current and the average current is less than 100\nobreakspace  {}mA at 3.3\nobreakspace  {}V. Moreover, $\mu $SDR\xspace  requires 259\nobreakspace  {}ms to boot the system, resulting in only 0.101\nobreakspace  {}Joules of energy consumption. $\mu $SDR\xspace  is 7.6$\times $ faster and uses 100$\times $ less energy than the USRP2 to start-up.\relax }}{\thepage }{figure.caption.9}}
\newlabel{fig:coldboot}{{3}{\thepage }{USRP2 and \sdr cold boot comparison. Both systems power on at {\em 0~s}. As expected, the USRP2 \subref {fig:usrp_coldboot} has a current spike of 1.8~A, and exhibits an average current draw of 700~mA at 6~V. It takes 1.96~s to load the firmware from an external SD card, resulting in 9.56~Joules of energy consumption during cold boot. In contrast, the flash-based \sdr doesn't have an in-rush current and the average current is less than 100~mA at 3.3~V. Moreover, \sdr requires 259~ms to boot the system, resulting in only 0.101~Joules of energy consumption. \sdr is 7.6$\times $ faster and uses 100$\times $ less energy than the USRP2 to start-up.\relax }{figure.caption.9}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {USRP2 Cold Boot}}}{\thepage }{figure.caption.9}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {$\mu $SDR\xspace Cold Boot}}}{\thepage }{figure.caption.9}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Sleep power and latency trade-off. Without frequency scaling, $\mu $SDR\xspace  draws 108\nobreakspace  {}mA while Waiting For an Interrupt {\em  WFI}. It wakes-up from this state in only 34$\mu $s. With frequency scaling, $\mu $SDR\xspace  saves 38\% in power while taking 89$\times $ longer to wake up.\relax }}{\thepage }{table.caption.10}}
\newlabel{tab:sdr_wfi_duty_cycle}{{4}{\thepage }{Sleep power and latency trade-off. Without frequency scaling, \sdr draws 108~mA while Waiting For an Interrupt {\em WFI}. It wakes-up from this state in only 34$\mu $s. With frequency scaling, \sdr saves 38\% in power while taking 89$\times $ longer to wake up.\relax }{table.caption.10}{}}
\bibstyle{abbrv}
\bibdata{bib}
\bibcite{alteraSoC}{1}
\bibcite{warp-platform}{2}
\bibcite{usrp:e100}{3}
\bibcite{usrp:n200}{4}
\bibcite{pentium-m}{5}
\bibcite{SCA}{6}
\bibcite{soda}{7}
\bibcite{igloo}{8}
\bibcite{kuar}{9}
\bibcite{mitola2000sdr}{10}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces USRP E100 power profile. E100 runs a full embedded Linux platform, making cold-boot an untenable comparison. Rather we show the timing from an idle, booted system to load a firmware image (configure the FPGA) and send the data. The firmware loaded signal is recorded from a firmware loaded pin. After configuration, the system idle power drops to just under 1\nobreakspace  {}A at 6\nobreakspace  {}V.\relax }}{\thepage }{figure.caption.11}}
\newlabel{fig:usrp_e100}{{4}{\thepage }{USRP E100 power profile. E100 runs a full embedded Linux platform, making cold-boot an untenable comparison. Rather we show the timing from an idle, booted system to load a firmware image (configure the FPGA) and send the data. The firmware loaded signal is recorded from a firmware loaded pin. After configuration, the system idle power drops to just under 1~A at 6~V.\relax }{figure.caption.11}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Discussion}{\thepage }{section.5}}
\newlabel{sec:disc}{{5}{\thepage }{Discussion}{section.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Radio Duty-Cycling}{\thepage }{subsection.5.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Low-Power FPGA}{\thepage }{subsection.5.2}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusions}{\thepage }{section.6}}
\newlabel{sec:conc}{{6}{\thepage }{Conclusions}{section.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7}References}{\thepage }{section.7}}
\bibcite{cmu-mac-sdr}{11}
\bibcite{vocallo}{12}
\bibcite{patridge:SDR}{13}
\bibcite{schmid-latency}{14}
\bibcite{sora}{15}
\bibcite{zynq}{16}
